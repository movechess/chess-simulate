{
  "version": 3,
  "sources": ["../../chessops/src/types.ts", "../../chessops/src/util.ts"],
  "sourcesContent": ["export const FILE_NAMES = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'] as const;\n\nexport type FileName = typeof FILE_NAMES[number];\n\nexport const RANK_NAMES = ['1', '2', '3', '4', '5', '6', '7', '8'] as const;\n\nexport type RankName = typeof RANK_NAMES[number];\n\nexport type Square = number;\n\nexport type SquareName = `${FileName}${RankName}`;\n\n/**\n * Indexable by square indices.\n */\nexport type BySquare<T> = T[];\n\nexport const COLORS = ['white', 'black'] as const;\n\nexport type Color = typeof COLORS[number];\n\n/**\n * Indexable by `white` and `black`.\n */\nexport type ByColor<T> = {\n  [color in Color]: T;\n};\n\nexport const ROLES = ['pawn', 'knight', 'bishop', 'rook', 'queen', 'king'] as const;\n\nexport type Role = typeof ROLES[number];\n\n/**\n * Indexable by `pawn`, `knight`, `bishop`, `rook`, `queen`, and `king`.\n */\nexport type ByRole<T> = {\n  [role in Role]: T;\n};\n\nexport const CASTLING_SIDES = ['a', 'h'] as const;\n\nexport type CastlingSide = typeof CASTLING_SIDES[number];\n\n/**\n * Indexable by `a` and `h`.\n */\nexport type ByCastlingSide<T> = {\n  [side in CastlingSide]: T;\n};\n\nexport interface Piece {\n  role: Role;\n  color: Color;\n  promoted?: boolean;\n}\n\nexport interface NormalMove {\n  from: Square;\n  to: Square;\n  promotion?: Role;\n}\n\nexport interface DropMove {\n  role: Role;\n  to: Square;\n}\n\nexport type Move = NormalMove | DropMove;\n\nexport function isDrop(v: Move): v is DropMove {\n  return 'role' in v;\n}\n\nexport function isNormal(v: Move): v is NormalMove {\n  return 'from' in v;\n}\n\nexport const RULES = [\n  'chess',\n  'antichess',\n  'kingofthehill',\n  '3check',\n  'atomic',\n  'horde',\n  'racingkings',\n  'crazyhouse',\n] as const;\n\nexport type Rules = typeof RULES[number];\n\nexport interface Outcome {\n  winner: Color | undefined;\n}\n", "import { FILE_NAMES, RANK_NAMES, CastlingSide, Color, Square, Role, Move, isDrop, SquareName } from './types.js';\n\nexport function defined<A>(v: A | undefined): v is A {\n  return v !== undefined;\n}\n\nexport function opposite(color: Color): Color {\n  return color === 'white' ? 'black' : 'white';\n}\n\nexport function squareRank(square: Square): number {\n  return square >> 3;\n}\n\nexport function squareFile(square: Square): number {\n  return square & 0x7;\n}\n\nexport function roleToChar(role: Role): string {\n  switch (role) {\n    case 'pawn':\n      return 'p';\n    case 'knight':\n      return 'n';\n    case 'bishop':\n      return 'b';\n    case 'rook':\n      return 'r';\n    case 'queen':\n      return 'q';\n    case 'king':\n      return 'k';\n  }\n}\n\nexport function charToRole(ch: 'p' | 'n' | 'b' | 'r' | 'q' | 'k' | 'P' | 'N' | 'B' | 'R' | 'Q' | 'K'): Role;\nexport function charToRole(ch: string): Role | undefined;\nexport function charToRole(ch: string): Role | undefined {\n  switch (ch) {\n    case 'P':\n    case 'p':\n      return 'pawn';\n    case 'N':\n    case 'n':\n      return 'knight';\n    case 'B':\n    case 'b':\n      return 'bishop';\n    case 'R':\n    case 'r':\n      return 'rook';\n    case 'Q':\n    case 'q':\n      return 'queen';\n    case 'K':\n    case 'k':\n      return 'king';\n    default:\n      return;\n  }\n}\n\nexport function parseSquare(str: SquareName): Square;\nexport function parseSquare(str: string): Square | undefined;\nexport function parseSquare(str: string): Square | undefined {\n  if (str.length !== 2) return;\n  const file = str.charCodeAt(0) - 'a'.charCodeAt(0);\n  const rank = str.charCodeAt(1) - '1'.charCodeAt(0);\n  if (file < 0 || file >= 8 || rank < 0 || rank >= 8) return;\n  return file + 8 * rank;\n}\n\nexport function makeSquare(square: Square): SquareName {\n  return (FILE_NAMES[squareFile(square)] + RANK_NAMES[squareRank(square)]) as SquareName;\n}\n\nexport function parseUci(str: string): Move | undefined {\n  if (str[1] === '@' && str.length === 4) {\n    const role = charToRole(str[0]);\n    const to = parseSquare(str.slice(2));\n    if (role && defined(to)) return { role, to };\n  } else if (str.length === 4 || str.length === 5) {\n    const from = parseSquare(str.slice(0, 2));\n    const to = parseSquare(str.slice(2, 4));\n    let promotion: Role | undefined;\n    if (str.length === 5) {\n      promotion = charToRole(str[4]);\n      if (!promotion) return;\n    }\n    if (defined(from) && defined(to)) return { from, to, promotion };\n  }\n  return;\n}\n\n/**\n * Converts a move to UCI notation, like `g1f3` for a normal move,\n * `a7a8q` for promotion to a queen, and `Q@f7` for a Crazyhouse drop.\n */\nexport function makeUci(move: Move): string {\n  if (isDrop(move)) return `${roleToChar(move.role).toUpperCase()}@${makeSquare(move.to)}`;\n  return makeSquare(move.from) + makeSquare(move.to) + (move.promotion ? roleToChar(move.promotion) : '');\n}\n\nexport function kingCastlesTo(color: Color, side: CastlingSide): Square {\n  return color === 'white' ? (side === 'a' ? 2 : 6) : side === 'a' ? 58 : 62;\n}\n"],
  "mappings": "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",
  "names": []
}
