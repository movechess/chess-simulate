/// <reference types="node" />
import type Transport from "@ledgerhq/hw-transport";
/** ******************************************************************************
 *  (c) 2019 - 2022 ZondaX AG
 *  (c) 2016-2017 Ledger
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 ******************************************************************************* */
export declare const CHUNK_SIZE = 250;
export declare const enum INS {
    GET_VERSION = 0,
    GET_ADDR = 1,
    SIGN = 2,
    SIGN_RAW = 3,
    ALLOWLIST_GET_PUBKEY = 144,
    ALLOWLIST_SET_PUBKEY = 145,
    ALLOWLIST_GET_HASH = 146,
    ALLOWLIST_UPLOAD = 147
}
export type INS_SIGN = INS.SIGN | INS.SIGN_RAW;
export declare const enum PAYLOAD_TYPE {
    INIT = 0,
    ADD = 1,
    LAST = 2
}
export declare const enum P1_VALUES {
    ONLY_RETRIEVE = 0,
    SHOW_ADDRESS_IN_DEVICE = 1
}
export declare const enum SCHEME {
    ED25519 = 0,
    SR25519 = 1
}
export declare const enum ERROR_CODE {
    NoError = 36864
}
export declare const ERROR_DESCRIPTION: Record<number, string>;
export interface SubstrateAppParams {
    name: string;
    cla: number;
    slip0044: number;
    ss58_addr_type: number;
}
export interface ResponseBase {
    error_message: string;
    return_code: number;
}
export interface ResponseAddress extends ResponseBase {
    address: string;
    pubKey: string;
}
export interface ResponseVersion extends ResponseBase {
    device_locked: boolean;
    major: number;
    minor: number;
    patch: number;
    test_mode: boolean;
}
export interface ResponseAllowlistPubKey extends ResponseBase {
    pubKey: string;
}
export interface ResponseAllowlistHash extends ResponseBase {
    hash: Buffer;
}
export interface ResponseSign extends ResponseBase {
    signature: Buffer;
}
export declare function errorCodeToString(statusCode: number): string;
export declare function processErrorResponse(response: any): any;
export declare function getVersion(transport: Transport, cla: number): Promise<any>;
