{"version":3,"file":"common.js","sourceRoot":"","sources":["../src/common.ts"],"names":[],"mappings":"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","sourcesContent":["import type Transport from \"@ledgerhq/hw-transport\";\n\n/** ******************************************************************************\n *  (c) 2019 - 2022 ZondaX AG\n *  (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ******************************************************************************* */\nexport const CHUNK_SIZE = 250;\n\nexport const enum INS {\n  GET_VERSION = 0x00,\n  GET_ADDR = 0x01,\n  SIGN = 0x02,\n  SIGN_RAW = 0x03,\n\n  // Allow list related commands\n  ALLOWLIST_GET_PUBKEY = 0x90,\n  ALLOWLIST_SET_PUBKEY = 0x91,\n  ALLOWLIST_GET_HASH = 0x92,\n  ALLOWLIST_UPLOAD = 0x93,\n}\n\nexport type INS_SIGN = INS.SIGN | INS.SIGN_RAW;\n\nexport const enum PAYLOAD_TYPE {\n  INIT = 0x00,\n  ADD = 0x01,\n  LAST = 0x02,\n}\n\nexport const enum P1_VALUES {\n  ONLY_RETRIEVE = 0x00,\n  SHOW_ADDRESS_IN_DEVICE = 0x01,\n}\n\nexport const enum SCHEME {\n  ED25519 = 0x00,\n  SR25519 = 0x01,\n}\n\nexport const enum ERROR_CODE {\n  NoError = 0x9000,\n}\n\nexport const ERROR_DESCRIPTION: Record<number, string> = {\n  1: \"U2F: Unknown\",\n  2: \"U2F: Bad request\",\n  3: \"U2F: Configuration unsupported\",\n  4: \"U2F: Device Ineligible\",\n  5: \"U2F: Timeout\",\n  14: \"Timeout\",\n  0x9000: \"No errors\",\n  0x9001: \"Device is busy\",\n  0x6802: \"Error deriving keys\",\n  0x6400: \"Execution Error\",\n  0x6700: \"Wrong Length\",\n  0x6982: \"Empty Buffer\",\n  0x6983: \"Output buffer too small\",\n  0x6984: \"Data is invalid\",\n  0x6985: \"Conditions not satisfied\",\n  0x6986: \"Transaction rejected\",\n  0x6a80: \"Bad key handle\",\n  0x6b00: \"Invalid P1/P2\",\n  0x6d00: \"Instruction not supported\",\n  0x6e01: \"App does not seem to be open\",\n  0x6f00: \"Unknown error\",\n  0x6f01: \"Sign/verify error\",\n};\n\nexport interface SubstrateAppParams {\n  name: string;\n  cla: number;\n  slip0044: number;\n  ss58_addr_type: number;\n}\n\nexport interface ResponseBase {\n  error_message: string;\n  return_code: number;\n}\n\nexport interface ResponseAddress extends ResponseBase {\n  address: string;\n  pubKey: string;\n}\n\nexport interface ResponseVersion extends ResponseBase {\n  device_locked: boolean;\n  major: number;\n  minor: number;\n  patch: number;\n  test_mode: boolean;\n}\n\nexport interface ResponseAllowlistPubKey extends ResponseBase {\n  pubKey: string;\n}\n\nexport interface ResponseAllowlistHash extends ResponseBase {\n  hash: Buffer;\n}\n\nexport interface ResponseSign extends ResponseBase {\n  signature: Buffer;\n}\n\nexport function errorCodeToString(statusCode: number) {\n  if (statusCode in ERROR_DESCRIPTION) return ERROR_DESCRIPTION[statusCode];\n  return `Unknown Status Code: ${statusCode}`;\n}\n\nfunction isDict(v: any) {\n  return typeof v === \"object\" && v !== null && !(v instanceof Array) && !(v instanceof Date);\n}\n\nexport function processErrorResponse(response: any) {\n  if (response != null) {\n    if (isDict(response)) {\n      if (Object.prototype.hasOwnProperty.call(response, \"statusCode\")) {\n        return {\n          return_code: response.statusCode,\n          error_message: errorCodeToString(response.statusCode),\n        };\n      }\n\n      if (\n        Object.prototype.hasOwnProperty.call(response, \"return_code\") &&\n        Object.prototype.hasOwnProperty.call(response, \"error_message\")\n      ) {\n        return response;\n      }\n    }\n    return {\n      return_code: 0xffff,\n      error_message: response.toString(),\n    };\n  }\n\n  return {\n    return_code: 0xffff,\n    error_message: response.toString(),\n  };\n}\n\nexport async function getVersion(transport: Transport, cla: number) {\n  return await transport.send(cla, INS.GET_VERSION, 0, 0).then((response) => {\n    const errorCodeData = response.subarray(-2);\n    const returnCode = errorCodeData[0] * 256 + errorCodeData[1];\n\n    // 12 bytes + 2 error code\n    if (response.length !== 14) {\n      return {\n        return_code: 0x6984,\n        error_message: errorCodeToString(0x6984),\n      };\n    }\n\n    const major = response[1] * 256 + response[2];\n    const minor = response[3] * 256 + response[4];\n    const patch = response[5] * 256 + response[6];\n    const deviceLocked = response[7] === 1;\n    // eslint-disable-next-line no-bitwise\n    const targetId = (response[8] << 24) + (response[9] << 16) + (response[10] << 8) + (response[11] << 0);\n\n    return {\n      return_code: returnCode,\n      error_message: errorCodeToString(returnCode),\n      // ///\n      test_mode: response[0] !== 0,\n      major,\n      minor,\n      patch,\n      deviceLocked,\n      target_id: targetId.toString(16),\n    };\n  }, processErrorResponse);\n}\n"]}